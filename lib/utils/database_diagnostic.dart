import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'dart:convert';

class DatabaseDiagnostic {
  static Future<void> printAllData() async {
    try {
      final prefs = await SharedPreferences.getInstance();
      final keys = prefs.getKeys();
      
      print('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•:');
      print('================================');
      
      for (final key in keys) {
        final value = prefs.getString(key);
        if (value != null) {
          try {
            final jsonData = json.decode(value);
            if (jsonData is List) {
              print('üìÅ $key: ${jsonData.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤');
              if (jsonData.isNotEmpty) {
                print('   –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç: ${jsonData.first}');
              }
            } else {
              print('üìÑ $key: $jsonData');
            }
          } catch (e) {
            // –ï—Å–ª–∏ –Ω–µ JSON, –≤—ã–≤–æ–¥–∏–º –∫–∞–∫ –æ–±—ã—á–Ω—É—é —Å—Ç—Ä–æ–∫—É
            print('üìÑ $key: $value (–Ω–µ JSON)');
          }
        }
      }
      
      print('================================');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –Ω–∞—à–∏ –∫–ª—é—á–∏
      final unifiedUsers = prefs.getString('unified_users') ?? '[]';
      final unifiedAds = prefs.getString('unified_advertisements') ?? '[]';
      final oldUsers = prefs.getString('users') ?? '[]';
      final oldAds = prefs.getString('advertisements') ?? '[]';
      
      print('üîç –°–ü–ï–¶–ò–§–ò–ß–ï–°–ö–ò–ï –ü–†–û–í–ï–†–ö–ò:');
      print('unified_users: ${json.decode(unifiedUsers).length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
      print('unified_advertisements: ${json.decode(unifiedAds).length} –æ–±—ä—è–≤–ª–µ–Ω–∏–π');
      print('users (—Å—Ç–∞—Ä—ã–µ): ${json.decode(oldUsers).length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
      print('advertisements (—Å—Ç–∞—Ä—ã–µ): ${json.decode(oldAds).length} –æ–±—ä—è–≤–ª–µ–Ω–∏–π');
      
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: $e');
    }
  }
  
  static Future<void> clearAllData() async {
    try {
      final prefs = await SharedPreferences.getInstance();
      await prefs.clear();
      print('‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: $e');
    }
  }
}
